# .github/workflows/ci.yml
name: CI Workflow

# Trigger the workflow on push to dev and main, and on pull requests to these branches
on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  build:

    # Use the latest Ubuntu runner for the build
    runs-on: self-hosted

    steps:
      # Step 1: Check out the repository code
      - name: Check out code
        uses: actions/checkout@v3
      
      # Step 2: Set up .NET SDK
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'  # Replace with your .NET version
      
      # Step 3: Restore dependencies
      - name: Restore dependencies
        run: dotnet restore
      
      # Step 4: Build the application
      - name: Build the application
        run: dotnet build --no-restore --configuration Release
      
      # Step 5: Run tests
      - name: Run tests
        run: dotnet test --no-restore --verbosity normal
        
  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/user-services:v1 ./CareerMatch.UserServices
          docker push "${{ secrets.DOCKER_USERNAME }}/user-services:v1"

      - name: Set DB Connection
        run: echo "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }}" >> $GITHUB_ENV

      - name: Deploy with Docker Compose
        env:
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker-compose -f ./docker-compose.yml up -d
  