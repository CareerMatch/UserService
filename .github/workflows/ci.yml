name: CI/CD Workflow

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the application
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-restore --verbosity normal
  
  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/user-services:v1 ./UserServices
          docker push "${{ secrets.DOCKER_USERNAME }}/user-services:v1"

      - name: Deploy Docker Container
        env:
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
        run: |
          # Stop and remove any existing container with the same name
          docker stop user-services || true && docker rm user-services || true

          # Run the new container with environment variables
          docker run -d \
            --name user-services \
            -p 8085:80 \
            -e DB_CONNECTION_STRING="${{ secrets.DB_CONNECTION_STRING }}" \
            ${{ secrets.DOCKER_USERNAME }}/user-services:v1
